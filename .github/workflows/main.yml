name: Node.js CI

on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "terraform/**"
  pull_request:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "terraform/**"
  workflow_dispatch:

env:
  CLONE_PATH: ${{ vars.NODEJS_DIR }}/${{ vars.CLONE_DIR }}
  DEPLOY_PATH: ${{ vars.NODEJS_DIR }}/${{ vars.DEPLOY_DIR }}
  REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git

jobs:
  build:
    runs-on: [ubuntu-latest]

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [18.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build --if-present

      - name: Run Tests
        run: npm test

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        if: github.event_name != 'pull_request'
        with:
          # list of Docker images to use as base name for tags
          images: |
            rodstewart/twilio_apps
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up Docker Buildx
        if: github.event_name != 'pull_request'
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Tag and Push Docker Image
        uses: docker/build-push-action@v5
        if: github.event_name != 'pull_request'
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }} # rodstewart/twilio_apps:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: [ubuntu-latest]
    needs: [build]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Start Docker
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.DIGITALOCEAN_HOSTNAME }}
          key: ${{ secrets.DIGITALOCEAN_PRIVATE_SSH_KEY }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          envs: CLONE_PATH,DEPLOY_PATH,REPO_URL
          script: |
            set -eox pipefail

            docker pull rodstewart/twilio_apps:latest
            docker rm twilio_apps -f
            docker run --name twilio_apps -dit --restart unless-stopped -p 80:3000 rodstewart/twilio_apps:latest

      - name: Update Twilio Webhook URLs
        if: success()
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
          HOST: ${{ vars.DIGITALOCEAN_HOSTNAME }}
          API_URL: "${{ vars.TWILIO_API_URL }}/${{ secrets.TWILIO_ACCOUNT_SID }}"
        run: ./.github/scripts/update_twilio_webhooks.sh
        shell: bash