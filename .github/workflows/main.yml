name: Node.js CI

on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
  pull_request:
    branches: [main]
    paths-ignore:
      - "**.md"
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [18.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build --if-present

      - name: Run Tests
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy NodeJS App
        uses: appleboy/ssh-action@master
        env:
          NODEJS_DIR: /home/nodejs
          CLONE_DIR: twilio_apps
          DEPLOY_DIR: deployed
          REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git
        with:
          host: twilio.awkwardweirdterribleandbad.com
          key: ${{ secrets.DIGITALOCEAN_PRIVATE_SSH_KEY }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          envs: NODEJS_DIR,CLONE_DIR,DEPLOY_DIR,REPO_URL
          script: |
            set -eo pipefail
            CLONE_PATH="$NODEJS_DIR/$CLONE_DIR"
            DEPLOY_PATH="$NODEJS_DIR/$DEPLOY_DIR"

            deploy_app() {
              echo "::group::Deploying App"
              echo "::debug::Cleaning up and cloning repo"
              rm -rf "$CLONE_PATH"
              git clone "$REPO_URL" "$CLONE_PATH"
              echo "::debug::Creating hooks directory"
              mkdir -p "$DEPLOY_PATH/.git/hooks"
              echo "::debug::Copying new code to deployment folder"
              rsync -ac --delete --exclude .git "$CLONE_PATH/" "$DEPLOY_PATH"
              echo "::endgroup::"
            }

            start_app() {
              echo "::group::Starting App"
              cd "$DEPLOY_PATH"
              echo "::debug::Installing node dependencies"
              npm ci
              echo "::debug::Removing default hello pm2 instance"
              sudo -u nodejs pm2 delete hello || true
              echo "::debug::Starting app and configuring for persistent startup"
              sudo -u nodejs pm2 start ecosystem.config.js --watch
              sudo -u nodejs pm2 save
              echo "::endgroup::"
            }

            cleanup() {
              echo "::group::Cleanup"
              rm -rf "$CLONE_PATH"
              echo "::endgroup::"
            }

            deploy_app
            start_app
            cleanup

            exit

      - name: Update Twilio Webhook URLs
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
          BAKER_SID: ${{ secrets.BAKER_SID }}
          FREEBIRD_SID: ${{ secrets.FREEBIRD_SID }}
          GETITON_SID: ${{ secrets.GETITON_SID }}
          DEEPTHT_SID: ${{ secrets.DEEPTHT_SID }}
        run: |
          BASE_URL="http://twilio.awkwardweirdterribleandbad.com"
          BAKER_URL="$BASE_URL/call/baker"
          FREEBIRD_URL="$BASE_URL/call/freebird"
          GETITON_URL="$BASE_URL/call/getiton"
          DEEPTHT_URL="$BASE_URL/ivr/welcome"
          API_URL="https://api.twilio.com/2010-04-01/Accounts/${TWILIO_ACCOUNT_SID}/IncomingPhoneNumbers"

          post_voice_url() {
            local sid="$1"
            local voice_url="$2"
            curl -s -XPOST "${API_URL}/${sid}.json" --data-urlencode "VoiceUrl=${voice_url}" -u "$TWILIO_ACCOUNT_SID:$TWILIO_AUTH_TOKEN"
          }

          echo "::group::Configuring Twilio Voice URLs"

          post_voice_url "$BAKER_SID" "$BAKER_URL"
          post_voice_url "$FREEBIRD_SID" "$FREEBIRD_URL"
          post_voice_url "$GETITON_SID" "$GETITON_URL"
          post_voice_url "$DEEPTHT_SID" "$DEEPTHT_URL"

          echo "::endgroup::"
